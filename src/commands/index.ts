import { Bot, Context, SessionFlavor } from 'grammy';
import { logger } from '../utils/logger';

interface SessionData {
  messageCount: number;
}

type MyContext = Context & SessionFlavor<SessionData>;

export function setupCommands(bot: Bot<MyContext>): void {
  // –ö–æ–º–∞–Ω–¥–∞ /start
  bot.command('start', async ctx => {
    ctx.session.messageCount = 0;
    const welcomeMessage = `
ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Uranabot!

–Ø –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å –≤–∞–º. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:
/help - –ø–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É
/stats - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É

–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —è –æ—Ç–≤–µ—á—É!
    `;

    await ctx.reply(welcomeMessage.trim());
    logger.info(`User ${ctx.from?.id} started the bot`);
  });

  // –ö–æ–º–∞–Ω–¥–∞ /help
  bot.command('help', async ctx => {
    const helpMessage = `
üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:

/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∑–∞–Ω–æ–≤–æ
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/stats - –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É

üîπ –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å—Ç–æ –ø–∏—Å–∞—Ç—å –º–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∏ —è –±—É–¥—É –æ—Ç–≤–µ—á–∞—Ç—å!
    `;

    await ctx.reply(helpMessage.trim());
    logger.info(`User ${ctx.from?.id} requested help`);
  });

  // –ö–æ–º–∞–Ω–¥–∞ /stats
  bot.command('stats', async ctx => {
    const messageCount = ctx.session.messageCount;
    const statsMessage = `
üìä –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:

üí¨ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${messageCount}
üë§ –í–∞—à ID: ${ctx.from?.id}
üìÖ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}
    `;

    await ctx.reply(statsMessage.trim());
    logger.info(`User ${ctx.from?.id} requested stats`);
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
  bot.on('message:text', async ctx => {
    ctx.session.messageCount += 1;

    const userMessage = ctx.message.text;
    const responses = [
      `–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: "${userMessage}". –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ! ü§î`,
      `–ü–æ–ª—É—á–∏–ª –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: "${userMessage}". –°–ø–∞—Å–∏–±–æ! üëç`,
      `"${userMessage}" - –æ—Ç–ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! üòä`,
      `–Ø –ø–æ–Ω—è–ª: "${userMessage}". –ß—Ç–æ –µ—â—ë —Ä–∞—Å—Å–∫–∞–∂–µ—Ç–µ? üôÇ`,
    ];

    const randomResponse =
      responses[Math.floor(Math.random() * responses.length)];
    if (randomResponse) {
      await ctx.reply(randomResponse);
    }

    logger.info(`User ${ctx.from?.id} sent message: ${userMessage}`);
  });

  logger.info('Bot commands setup completed');
}
