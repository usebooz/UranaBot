services:
  uranabot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: uranabot
    environment:
      - NODE_ENV=production
      - BOT_TOKEN=${BOT_TOKEN}
      - LOG_LEVEL=info
      - SPORTS_API_URL=${SPORTS_API_URL}
      - SPORTS_API_PATH=${SPORTS_API_PATH}
      - SPORTS_TOURNAMENT_RPL=${SPORTS_TOURNAMENT_RPL}
      - TELEGRAM_URL=${TELEGRAM_URL}
      - URANAWEB_APP_URL=${URANAWEB_APP_URL}
      - URANAWEB_APP_PATH=${URANAWEB_APP_PATH}
    restart: unless-stopped
    networks:
      - uranabot-network
    healthcheck:
      test: ["CMD-SHELL", "node -e \"const https=require('https');const u='https://api.telegram.org/bot'+process.env.BOT_TOKEN+'/getMe'; https.get(u,r=>process.exit(r.statusCode===200?0:1)).on('error',()=>process.exit(1));\""]
      interval: 30s
      timeout: 3s
      start_period: 5s
      retries: 3

  caddy:
    image: caddy:2-alpine
    container_name: uranaapi
    environment:
      - URANA_API_URL=${URANA_API_URL}
      - URANA_API_PATH=${URANA_API_PATH}
      - SPORTS_API_URL=${SPORTS_API_URL}
      - SPORTS_API_PATH=${SPORTS_API_PATH}
      - URANAWEB_APP_URL=${URANAWEB_APP_URL}
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    networks:
      - uranabot-network
    healthcheck:
      test: ["CMD-SHELL", "curl -s -o /dev/null -w '%{http_code}' -X OPTIONS \"${URANA_API_URL}${URANA_API_PATH}\" | grep -q '^204$'"]
      interval: 30s
      timeout: 3s
      start_period: 5s
      retries: 3

networks:
  uranabot-network:
    driver: bridge

volumes:
  caddy_data:
  caddy_config:
